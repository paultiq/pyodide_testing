name: "Test 5702"

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  tests:
    name: "${{ matrix.pyodide-version }}-${{ matrix.os }}-${{ matrix.chrome-version }}-${{ matrix.python-version }}"
    runs-on: "${{ matrix.os }}"
    timeout-minutes: 60

    strategy:
      matrix:
        os:
          - "ubuntu-latest"
          #- "windows-latest"
          #- "macos-latest"
        chrome-version:
          - 135.0.7049.42
          #- 136.0.7103.49
          #- 137.0.7151.69
          #- 138.0.7204.92
        pyodide-version:
          - "v0.28.0"
          - "v0.27.7"
          - "v0.27.0"
          - "v0.26.4"

        enable_jspi: 
          - "False"
        python_version:
          - "3.13"
      fail-fast: false

    steps:
      - uses: browser-actions/setup-chrome@v1
        id: setup-chrome
        with:
          chrome-version: ${{ matrix.chrome-version }}
          install-dependencies: true                     
          install-chromedriver: true  
      - name: Export CHROMEDRIVER_PATH
        run: |
          echo "CHROMEDRIVER_PATH=${{ steps.setup-chrome.outputs.chromedriver-path }}" >> $GITHUB_ENV
          echo "CHROME_PATH=${{ steps.setup-chrome.outputs.chrome-path }}" >> $GITHUB_ENV
          # echo "CHROME_USER_DATA_DIR=$RUNNER_TEMP/chrome-profile-$GITHUB_RUN_ID" >> $GITHUB_ENV
          echo "ENABLE_JSPI=${{ matrix.enable_jspi }}">> $GITHUB_ENV
          echo "PYODIDE_VERSION=${{ matrix.python_version }}">> $GITHUB_ENV

      - name: Debug ChromeDriver path
        run: |
          echo "CHROMEDRIVER_PATH=${{ steps.setup-chrome.outputs.chromedriver-path }}"
          echo "CHROMEDRIVER_PATH=${{ steps.setup-chrome.outputs.chromedriver-version }}"
          echo "CHROMEDRIVER_PATH=${{ steps.setup-chrome.outputs.chrome-path }}"
          echo "CHROMEDRIVER_PATH=${{ steps.setup-chrome.outputs.chrome-version }}" 
          echo "CHROMEDRIVER_PATH=$CHROMEDRIVER_PATH"
          $CHROMEDRIVER_PATH --version
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          activate-environment: true
          python-version: ${{ matrix.python-version }}  # optional, defaults to use pyproject.toml or .python-version
          cache-dependency-glob: "uv.lock"
      - name: Install dependencies
        run: uv sync
      - name: Show versions
        run: python --version
      - name: "Run test"
        run: |
          python mre_5702/main.py